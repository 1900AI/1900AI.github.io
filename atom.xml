<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>1900</title>
  <icon>https://my1900.github.io/favicon.ico</icon>
  
  <link href="https://my1900.github.io/atom.xml" rel="self"/>
  
  <link href="https://my1900.github.io/"/>
  <updated>2024-11-19T12:35:39.004Z</updated>
  <id>https://my1900.github.io/</id>
  
  <author>
    <name>1900</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>我的造船记</title>
    <link href="https://my1900.github.io/2024/11/17/note1/"/>
    <id>https://my1900.github.io/2024/11/17/note1/</id>
    <published>2024-11-16T16:00:00.000Z</published>
    <updated>2024-11-19T12:35:39.004Z</updated>
    
    <content type="html"><![CDATA[<p>互联网吸引我的地方有很多：开源、极客精神、知识共享、自由……</p><p>在接触到知识管理的概念后，我一直用 Markdown 记录自己的学习与思考。然而，这些记录始终只是静静地存放在本地，缺少一个输出的途径。而输出不仅是对知识的巩固，更是一个审视与优化笔记的过程。</p><p>在学习的过程中，我也读过无数优质的博客文章，也认识了一些拥有个人博客的人。</p><p>于是，我问自己：为什么不尝试拥有一个个人博客呢？</p><p>就这样，我开始行动了。</p><p>经过一番调研后，我最终选择了 Hexo 作为我的博客搭建工具，从零开始构建自己的知识分享平台</p><hr><h2 id="基础-Hexo-安装"><a href="#基础-Hexo-安装" class="headerlink" title="基础 Hexo 安装"></a>基础 Hexo 安装</h2><p>参考：<a href="https://tech.yemengstar.com/hexo-tutorial-deploy-githubpages-beginner/">HEXO 系列教程 | 使用 GitHub 部署静态博客 HEXO | 夜梦星尘の折腾日记</a></p><p>按照以下步骤安装 Hexo：</p><ol><li><p><strong>Git 安装</strong><br />如果已安装 Git，可跳过此步骤。</p></li><li><p><strong>Node.js 安装</strong><br />参考 <a href="https://www.cnblogs.com/liuqiyun/p/8133904.html">Node.js 安装及环境配置之 Windows 篇 - 刘奇云</a>。</p><ul><li>将 Node.js 安装在 C 盘。</li><li>npm 全局模块路径与缓存路径设为：<code>D:\node</code>。</li></ul></li><li><p><strong>Hexo 安装</strong><br />使用以下命令安装 Hexo CLI：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure></li><li><p><strong>GitHub 配置</strong></p><ul><li><p>新建一个名为 <code>1900.github.io</code> 的仓库。</p></li><li><p>打开 Git Bash，输入以下命令生成 SSH Key：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">ssh-keygen</span> <span class="string">-t</span> <span class="string">rsa</span> <span class="string">-C</span> <span class="string">&quot;你的邮件地址&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>进入 <code>C:\Users\用户名\.ssh</code>，用记事本打开 <code>id_rsa.pub</code>，复制内容。</p></li><li><p>在 GitHub 用户设置中添加 SSH Key，粘贴代码后保存。</p></li><li><p>在 Git Bash 中输入以下命令，确保连接成功：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">ssh</span> <span class="string">-T</span> <span class="string">git@github.com</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>创建博客</strong></p><ul><li><p>新建一个文件夹 <code>Blog</code>，进入文件夹后运行以下命令：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">hexo</span> <span class="string">init</span> <span class="string">myblog</span></span><br><span class="line"><span class="string">cd</span> <span class="string">myblog</span></span><br><span class="line"><span class="string">npm</span> <span class="string">install</span></span><br><span class="line"><span class="string">hexo</span> <span class="string">g</span></span><br><span class="line"><span class="string">hexo</span> <span class="string">s</span></span><br></pre></td></tr></table></figure></li><li><p>浏览器访问 <code>localhost:4000</code>，即可看到 Hexo 的基础界面。</p></li></ul></li></ol><hr><h2 id="将博客上线-GitHub"><a href="#将博客上线-GitHub" class="headerlink" title="将博客上线 GitHub"></a>将博客上线 GitHub</h2><p>需要将博客上线github才能实现通过链接访问的功能。</p><ol><li><p><strong>修改</strong>  <strong>​<code>_config.yml</code>​</strong> <strong>文件</strong><br />打开 <code>myblog</code> 文件夹中的 <code>_config.yml</code>，在 <code>deploy</code> 部分添加以下内容：</p> <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">https://github.com/ZachTZZ/1900.github.io</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure></li><li><p><strong>安装部署工具</strong><br />在 <code>myblog</code> 文件夹中运行以下命令安装自动部署工具：</p> <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">npm</span> <span class="string">install</span> <span class="string">hexo-deployer-git</span> <span class="string">--save</span></span><br></pre></td></tr></table></figure></li><li><p><strong>生成并上传博客</strong><br />使用 Git Bash，依次运行以下命令：</p> <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">hexo</span> <span class="string">g</span>   <span class="comment"># 生成静态文件</span></span><br><span class="line"><span class="string">hexo</span> <span class="string">d</span>   <span class="comment"># 上传到 GitHub</span></span><br></pre></td></tr></table></figure></li></ol><hr><h2 id="设计自己的主题"><a href="#设计自己的主题" class="headerlink" title="设计自己的主题"></a>设计自己的主题</h2><h3 id="布局设计"><a href="#布局设计" class="headerlink" title="布局设计"></a>布局设计</h3><p>在看了许多主题后，我发现它们要么过于简约，缺乏我需要的功能，要么过于复杂，显得冗杂不堪。于是，我决定自己设计并实现一个主题。多亏了 AI 的帮助，尤其是 Cursor 工具的出现，让我能够在短短三天内，从零基础学起，到实现我心中理想的布局。</p><p>这段经历让我意识到，人类可以将更多精力专注于设计和创造力的发挥，而通过与 AI 的协作实现自己的想法。在这个过程中，我不仅逐步熟悉了代码的内容，还逐渐提高了对技术需求的表达能力。</p><hr><h3 id="数学公式支持"><a href="#数学公式支持" class="headerlink" title="数学公式支持"></a>数学公式支持</h3><p>在我的大部分文章中，都会用到 LaTeX 数学公式。然而，Hexo 的默认渲染器并不支持公式渲染，而现有的插件也各有不足。经过查阅资料和实际尝试，我终于实现了一个稳定、高效的公式渲染效果，主要参考了以下两篇文章：</p><ul><li><a href="https://zsyyblog.com/b73ceb85.html">Hexo 多种 Markdown 渲染器对比分析 | 竹山一叶</a></li><li><a href="https://blog.barku.re/2024/04/20/%E5%BD%BB%E5%BA%95%E8%A7%A3%E5%86%B3-Hexo-%E7%9A%84%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F%E6%B8%B2%E6%9F%93%E9%97%AE%E9%A2%98/">彻底解决 Hexo 的数学公式渲染问题 | Barkure</a></li></ul><hr><h3 id="相册"><a href="#相册" class="headerlink" title="相册"></a>相册</h3><p><a href="https://developer.aliyun.com/article/1465963">手把手教你搭建阿里云图床(PicGo+Typora+阿里云OSS)，新手小白一看就会-阿里云开发者社区</a></p><p><a href="https://nickxu.me/post/aliyun-oss-brushed-1000rmb-fees">阿里云OSS被刷，我交了1000RMB学费 | NX の 博客</a></p><p><a href="https://www.alibabacloud.com/help/zh/oss/user-guide/use-cdn-to-accelerate-access-to-oss">使用CDN加速OSS资源访问 - 对象存储 OSS - 阿里云</a></p><p>参考上述内容，我实现了自己的相册的搭建，以后更新相册只需要按照下面的步骤执行。</p><ol><li><p><strong>准备图片文件</strong><br />将图片文件（例如 <code>PTZZ4567.jpg</code>）通过 PicGo 上传到阿里云 OSS，获取对应的 URL。</p></li><li><p><strong>更新 OSS URLs 文件</strong><br />在 <code>source/images/gallery/oss-urls.json</code> 文件中，添加新图片的 URL 映射，例如：</p> <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;PTZZ4278.jpg&quot;:</span> <span class="string">&quot;https://1900-photo.oss-cn-beijing.aliyuncs.com/img/PTZZ4278.jpg&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>添加图片描述</strong><br />在 <code>source/images/gallery/descriptions.json</code> 文件中，为新图片添加描述，例如：</p> <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;PTZZ4278.jpg&quot;:</span> &#123;</span><br><span class="line">      <span class="attr">&quot;description&quot;:</span> <span class="string">&quot;《熊洞街》 \n 可爱的机械巨兽&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>生成图片信息</strong><br />运行脚本 <code>scripts/process-photos.js</code> 来处理新添加的图片：</p> <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">node</span> <span class="string">scripts/process-photos.js</span></span><br></pre></td></tr></table></figure></li><li><p><strong>重新生成网站</strong><br />执行以下命令，清理旧文件并重新生成静态网站：</p> <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">hexo</span> <span class="string">c</span></span><br><span class="line"><span class="string">hexo</span> <span class="string">g</span></span><br></pre></td></tr></table></figure></li></ol><hr><h2 id="写文章"><a href="#写文章" class="headerlink" title="写文章"></a>写文章</h2><p>我的所有文章都在思源笔记中。思源是一款隐私优先的个人知识管理系统。在体验过 FlowUs（类似 Notion）、飞书等多款笔记软件后，因本地化需求，我最终选择了思源。它不仅功能齐全，例如支持双链，还支持使用 S3 同步功能实现多端数据同步。经过一年的使用，我发现它非常适合我的需求。</p><p>思源笔记支持将内容导出为 Markdown 格式，但导出的文件需要进行一定处理后，才能上传到我的博客。</p><ol><li><p>在项目根目录下使用 Hexo 命令创建新文章：<code>hexo new post &quot;文章标题&quot;</code></p></li><li><p>在文章开头添加必要的 Front-matter：</p> <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">文章标题</span></span><br><span class="line"><span class="attr">date:</span> <span class="string">YYYY-MM-DD</span></span><br><span class="line"><span class="attr">categories:</span> <span class="string">分类名称</span></span><br><span class="line"><span class="attr">tags:</span> [<span class="string">标签1</span>, <span class="string">标签2</span>]</span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure></li><li><p>粘贴思源导出的md文件</p></li><li><p>本地预览</p> <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">hexo</span> <span class="string">c</span>   <span class="comment"># 清理缓存</span></span><br><span class="line"><span class="string">hexo</span> <span class="string">s</span>  <span class="comment"># 启动本地服务器预览</span></span><br></pre></td></tr></table></figure></li><li><p>确认文章没问题后发布文章：</p> <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">hexo</span> <span class="string">c</span>   </span><br><span class="line"><span class="string">hexo</span> <span class="string">g</span>   </span><br><span class="line"><span class="string">hexo</span> <span class="string">d</span>  </span><br></pre></td></tr></table></figure></li></ol><h2 id="写在后面"><a href="#写在后面" class="headerlink" title="写在后面"></a>写在后面</h2><p>这三天，我初步搭建了一个博客框架。虽然还有许多细节需要完善，比如照片的布局，代码高亮的样式调整，还有大量内容等待填充，但基础结构已基本成型。如果你有任何建议或想法，非常欢迎与我交流！</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;互联网吸引我的地方有很多：开源、极客精神、知识共享、自由……&lt;/p&gt;
&lt;p&gt;在接触到知识管理的概念后，我一直用 Markdown</summary>
        
      
    
    
    
    <category term="笔记" scheme="https://my1900.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="博客" scheme="https://my1900.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>概率论与数理统计第一章：概率论基本概念</title>
    <link href="https://my1900.github.io/2024/11/16/%E6%A6%82%E7%8E%87%E8%AE%BA%E4%B8%8E%E6%95%B0%E7%90%86%E7%BB%9F%E8%AE%A1%E7%AC%AC%E4%B8%80%E7%AB%A0%EF%BC%9A%E6%A6%82%E7%8E%87%E8%AE%BA%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/"/>
    <id>https://my1900.github.io/2024/11/16/%E6%A6%82%E7%8E%87%E8%AE%BA%E4%B8%8E%E6%95%B0%E7%90%86%E7%BB%9F%E8%AE%A1%E7%AC%AC%E4%B8%80%E7%AB%A0%EF%BC%9A%E6%A6%82%E7%8E%87%E8%AE%BA%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</id>
    <published>2024-11-16T07:11:03.000Z</published>
    <updated>2024-11-16T07:19:23.690Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基本知识点"><a href="#基本知识点" class="headerlink" title="基本知识点"></a>基本知识点</h1><h2 id="1-1-随机事件及其运算"><a href="#1-1-随机事件及其运算" class="headerlink" title="1.1 随机事件及其运算"></a>1.1 随机事件及其运算</h2><ul><li><p><strong>随机现象（或随机试验）的定义</strong></p><p>一个现象E如果满足以下三个特征，我们就称该现象为一个随机现象（或随机试验）：</p><ol><li><strong>可重复性</strong>：该试验可以在相同条件下重复进行。</li><li><strong>可预测性</strong>：所有可能出现的结果是已知的。（可列的）</li><li><strong>不确定性</strong>：试验结果的出现具有随机性</li></ol><p>对于随机试验E，我们用符号表示其所有可能结果组成的集合，记作 $\Omega &#x3D; {\omega}$，这个集合被称为随机试验E对应的<strong>样本空间</strong>。样本空间中的元素被称为样本点，即样本点就是随机试验的可能结果。</p></li><li><p><strong>随机事件</strong>：随机试验 E 对应的样本空间$\Omega$ 的子集</p></li><li><p>必然事件：样本空间 $\Omega$ 自身；不可能事件：空集$\phi$<br>必然事件概率一定为1，但概率为1不一定是必然事件，不可能事件同理（用几何概型可证明：打到靶心概率为0但并非不可能发生）</p></li><li><p><strong>事件的关系与运算</strong></p><ol><li><strong>事件的包含与相等</strong>：如果事件A的每一个样本点都包含在事件B中，则称事件B包含事件A，记为$A \subseteq B$或$B \supseteq A$。如果$A \subseteq B$且$B \subseteq A$，则称事件A与B相等，记为$A &#x3D; B$。</li><li><strong>和事件</strong>：设A与B为两个随机事件，事件$A \cup B$称为A与B的和事件，有时也记为$A+B$。它表示A或B至少有一个发生的事件。对于n个事件$A_1, A_2, \ldots, A_n$，它们的和事件表示至少有一个发生，记为$\bigcup_{i&#x3D;1}^{n} A_i$。</li><li><strong>积事件</strong>：设A与B为两个随机事件，事件$A \cap B$称为A与B的积事件，有时也记为$AB$​。它表示A和B同时发生的事件。对于n个事件$A_1, A_2, \ldots, A_n$，它们的积事件表示所有事件都发生，记为$\bigcap_{i&#x3D;1}^{n} A_i$。</li><li><strong>差事件</strong>：设A与B为两个随机事件，事件$A - B$称为A与B的差事件。它表示A发生而B不发生的事件。注意$A - B &#x3D; A \cap \overline{B} &#x3D; A \cap (\Omega - B)$</li><li><strong>补事件</strong>：设A为随机事件，事件$\overline{A} &#x3D; \Omega - A$称为A的补事件。它表示A不发生的事件。</li><li><strong>互不相容</strong>：如果$A \cap B &#x3D; \phi$，则称A与B互不相容或互斥。这意味着A和B不能同时发生。</li></ol></li><li><p>事件运算和的一些重要原则：</p><ol><li><p><strong>交换律</strong>：</p><ul><li>$A \cup B &#x3D; B \cup A$，$A \cap B &#x3D; B \cap A$</li></ul></li><li><p><strong>结合律</strong>：</p><ul><li>$A \cup (B \cup C) &#x3D; (A \cup B) \cup C$</li><li>$A \cap (B \cap C) &#x3D; (A \cap B) \cap C$</li></ul></li><li><p><strong>分配律</strong>：对于任意事件 $B$ 和事件集合 ${A_1, A_2, …, A_n}$，有以下等式成立：</p><ul><li>$B \cap (\bigcup\limits_{i&#x3D;1}^{n} A_i) &#x3D; \bigcup\limits_{i&#x3D;1}^{n} (A_i \cap B)$</li><li>$B \cup (\bigcap\limits_{i&#x3D;1}^{n} A_i) &#x3D; \bigcap\limits_{i&#x3D;1}^{n} (A_i \cup B)$</li></ul></li><li><p><strong>De Morgan 法则</strong>：</p><ul><li>$\overline{\bigcup\limits_{i&#x3D;1}^{n} A_i} &#x3D; \bigcap\limits_{i&#x3D;1}^{n} \overline{A_i}$，$\overline{\bigcap\limits_{i&#x3D;1}^{n} A_i} &#x3D; \bigcup\limits_{i&#x3D;1}^{n} \overline{A_i}$</li><li>记忆方法：<img src="/images/%E5%BE%B7%E6%91%A9%E6%A0%B9-20240902200828-ihysmqa.webp" alt="德摩根">​</li></ul></li></ol></li></ul><h2 id="1-2-概率的定义及其基本性质"><a href="#1-2-概率的定义及其基本性质" class="headerlink" title="1.2 概率的定义及其基本性质"></a>1.2 概率的定义及其基本性质</h2><ul><li><p><strong>定义</strong></p><p>设$\Omega$为随机试验E的样本空间。对于任意事件$A \subset \Omega$，如果存在一个实数$P(A)$与之对应，并满足以下条件：</p><ol><li><p><strong>非负性</strong>：$P(A) \geq 0$，即概率值非负；</p></li><li><p><strong>归一性</strong>：$P(\Omega) &#x3D; 1$，即样本空间的概率为1；</p></li><li><p><strong>可列可加性</strong>：设$A_1, A_2, \cdots$是一列两两互不相容的事件，即$A_i \cap A_j &#x3D; \phi$对于所有$i \neq j$，则事件的并集的概率等于这些事件概率的和，即</p><p> $$<br> P(\bigcup_{i&#x3D;1}^{\infty} A_i) &#x3D; \sum_{i&#x3D;1}^{\infty} P(A_i)<br> $$</p></li></ol><p>则称$P(A)$为事件$A$的概率。</p></li><li><p><strong>性质</strong></p><ol><li><p>$P(\phi)&#x3D;0$，证明：$P(\phi)&#x3D;P(\phi)+P(\phi)+\cdots  $</p></li><li><p>可列可加性取$A_{n+1}&#x3D;A_{n+2}&#x3D;\cdots&#x3D;\phi$即可证明<strong>有限可加性</strong>：</p><p> 设$A_1,A_2,\cdots,A_n$是$n$个两两互不相容的事件，则有$P(\bigcup_{\mathrm{i&#x3D;1}}^n\mathrm{A_i})&#x3D;\sum_{\mathrm{i&#x3D;1}}^nP(\mathrm{A_i})$</p></li><li><p>如果$A\subset B$，则$P(A)\leq P(B)$，证明：$P(\mathrm{B})&#x3D;P(A)+P(B\overline{A})&gt;P(A)$，但若$A$严格包含于$B$却不能证明$P(A)&lt; P(B)$</p></li><li><p>$P(A)+P(\overline{A})&#x3D;1$​</p></li><li><p><strong>减法公式</strong>：$P(A-B)&#x3D;P(A\overline{B})&#x3D;P(A)-P(AB) 。$</p></li><li><p><strong>加法公式：</strong><br> ​$P(A\cup B)&#x3D;P(A)+P(B)-P(AB)$，<br> ​$P(A\cup B\cup C)&#x3D;P(A)+P(B)+P(C)-P(AB)-P(AC)-P(BC)+P(ABC)$</p></li></ol></li></ul><h2 id="1-3-等可能概型"><a href="#1-3-等可能概型" class="headerlink" title="1.3 等可能概型"></a>1.3 等可能概型</h2><h4 id="1-3-1-古典概型"><a href="#1-3-1-古典概型" class="headerlink" title="1.3.1 古典概型"></a>1.3.1 古典概型</h4><ul><li><p><strong>排列组合</strong></p><ol><li>排列：从给定的n个元素中取出r个元素，按照一定的顺序进行排列。计算公式为$A_n^r &#x3D; \frac{n!}{(n-r)!}$</li><li>组合：从给定的n个元素中取出r个元素，不考虑元素的顺序。计算公式为：$C_n^r &#x3D; \frac{n!}{r!(n-r)!}&#x3D; \frac{n \times (n-1) \times … \times (n-r+1)}{r!}$</li></ol></li><li><p><strong>定义</strong></p><p>当一个随机试验满足一下两个条件时，我们称该试验对应的概率模型为古典概型。</p><ol><li>有限性：样本空间中的样本点总数是有限的。</li><li>等可能性：每个样本点出现的可能性相同。</li></ol></li><li><p>在古典概型中，事件$A$的概率可以用以下公式计算：</p><p>$$<br>P(A) &#x3D; \frac{\text{事件}A\text{中样本点的数量}}{\text{样本点总数}}<br>$$</p></li><li><p><strong>摸球问题</strong></p><p>设有 $N$ 个不同的球，要从中任取 $n$ 个球$(n\leq N):$  </p><ol><li>有放回摸球：每次摸球后，将球放回原位，然后再进行下一次摸球。这种情况下，每次摸球时，都有N个球可供选择，因此样本点总数为$N^n$。</li><li>不放回摸球，但与次序无关：每次摸球后，不将球放回原位，但我们只关心摸出的球的组合，而不关心它们的顺序。这种情况下，样本点总数为从N个球中选择n个球的组合数，样本点总数为$C_N^n$表示</li><li>不放回摸球，且与次序有关：每次摸球后，不将球放回原位，且我们关心摸出的球的顺序。样本点总数为$A_N^n$</li></ol><ul><li><p>例：设袋中有6个白球和4个红球，共10个球。</p><ol><li>有放回摸球，求5个球中恰有3个白球的概率：$P(A) &#x3D; \frac{C_6^3 \cdot 6^3 \cdot 4^2}{10^5} &#x3D; C_5^3 \cdot 0.6^3 \cdot 0.4^2$</li><li>不放回摸球，求5个球中恰有3个白球的概率：$P(B) &#x3D; \frac{C_6^3 \cdot C_4^2}{C_{10}^5}$</li><li>不放回摸球，求5个球中第三个球为白球的概率（先取一个白球）：$P(C) &#x3D; \frac{C_{9}^2 \cdot C_{7}^2}{C_{10}^5 \cdot C_{5}^1} &#x3D; \frac{6}{10}$</li></ol></li></ul></li><li><p><strong>分房问题</strong></p><ul><li><p>例 ：将 n个人随机分到 N 个房间中去，$(n\leq N)$,每个人分到哪个房间时等可能的，且假设每个房间可容纳的人数没有限制，求</p><ol><li>某指定的一个房间(比如第一个房间)恰有$m$个人的概率。$(m\leq n)$：$P(A)&#x3D;\frac{C_n^m\cdot(N-1)^{n-m}}{N^n}$</li><li>每两个人都不在同一个房间的概率：$P(B)&#x3D;\frac{A_N^n}{N^n}$</li></ol></li></ul></li><li><p><strong>抽签问题</strong></p><p>例：设有 15 个人要去看电影，只有 7 张电影票，于是进行抽签决定谁去 看电影。求第 5 个人抽到电影票的概率：$P(A)&#x3D;\frac{7\cdot14!}{15!}&#x3D;\frac{7}{15}$  </p><p>抽签与顺序无关</p></li><li><p><strong>分组法</strong></p><p>将$n$个不同的球分成$k$个不同的组,使得每组各有$n_1,n_2,\cdotp\cdotp\cdotp,n_k$个球，总的取法为：</p><p>$$<br>C_n^{n_1}C_{n-n_1}^{n_2}\cdots C_{n-n_1-n_2-\cdots-n_{k-2}}^{n_{k-1}}&#x3D;\frac{n!}{n_1!n_2!\cdots n_k!}<br>$$</p></li></ul><h4 id="1-3-2-几何概型"><a href="#1-3-2-几何概型" class="headerlink" title="1.3.2 几何概型"></a>1.3.2 几何概型</h4><ul><li><p>定义</p><p>几何概型具有以下两个特征：</p><ol><li><strong>无限性</strong>：实验中所有可能出现的基本事件（结果）有无限多个。</li><li><strong>等可能性</strong>：每个基本事件出现的可能性相等。</li></ol></li><li><p>计算</p><p>在几何概型中，如果我们有一个可以度量的区域G，其中包含一个子区域g，那么随机选择一个点落在g中的概率可以定义为：</p><p>$$<br>P &#x3D; \frac{\text{g的测度}}{\text{G的测度}}<br>$$</p><p>其中，测度可以是长度、面积或体积，具体取决于问题的性质。</p></li><li><p>会面问题</p><p>​<img src="/images/image-20240904105003-7sagfbz.png" alt="image">​</p></li></ul><h2 id="1-4-条件概率"><a href="#1-4-条件概率" class="headerlink" title="1.4 条件概率"></a>1.4 条件概率</h2><ul><li><p>条件概率定义</p><p>设 A 与 B 为两个事件，且$P(B)&gt;0$。那么在“已知事件$B$ 发生”的条件下，事件$A$的条件概率$P(A\mid B)$定义为$ P(A\mid B)&#x3D;\frac{P(AB)}{P(B)}\text{。}$</p></li><li><p>条件概率性质</p><ol><li>非负性：对任意事件 $A$,有$P(A\mid B)\geq0$</li><li>归一性：$P(\Omega\mid B)&#x3D;1$</li><li>可列可加性：对任意的一列两两互不相容的事件$A_n,n&#x3D;1,2,\cdots$,有$P(\bigcup_{n&#x3D;1}^\infty A_n\mid B)&#x3D;\sum_{n&#x3D;1}^\infty P(A_n\mid B)$</li></ol></li><li><p>乘法公式</p><p>$P(AB)&#x3D;P(A)P(B\mid A)&#x3D;P(B)P(A\mid B)$</p></li><li><p>样本空间的划分（分割、完备事件组）</p><p>设$A_1,A_2,\cdots,A_n$为一组事件，如果$A_iA_j&#x3D;\phi$且$\bigcup_{i&#x3D;1}^nA_i&#x3D;\Omega$则称$A_1,A_2,\cdots,A_n$是$\Omega$的划分（分割、完备事件组）</p></li><li><p>全概率公式（关键在于构造第一阶段事件的划分）</p><p>设$A_1,A_2,\cdots,A_n$为$\Omega$的一组划分，则对任意的事件 B,有$P(B)&#x3D;\sum_{i&#x3D;1}^nP(A_i)P(B\mid A_i)$  </p><p>全概率公式应用范围：在第一阶段所有可能已知且第一阶段的试验结果对第二阶段有影响的时候求第二个阶段结果的概率</p></li><li><p>贝叶斯公式</p><p>设$A_1,A_2,\cdotp\cdotp\cdotp,A_n$ 是$\Omega$ 的一个划分，如果$P(A_k)&gt;0,k&#x3D;1,2,\cdotp\cdotp\cdotp,n$ ,则对任意事件 B,只要$P(B)&gt;0$,就有</p><p>$$<br>P(A_k\mid B)&#x3D;\frac{P(A_kB)}{P(B)}&#x3D;\frac{P(A_k)P(B\mid A_k)}{\sum_{i&#x3D;1}^nP(A_i)P(B\mid A_i)}<br>$$</p><p>$P(A_i)$称为先验概率，条件概率$P(A_i\mid B)$称为后验概率</p></li></ul><h2 id="1-5-独立性与贝努利试验"><a href="#1-5-独立性与贝努利试验" class="headerlink" title="1.5 独立性与贝努利试验"></a>1.5 独立性与贝努利试验</h2><h3 id="1-5-1-独立性"><a href="#1-5-1-独立性" class="headerlink" title="1.5.1 独立性"></a>1.5.1 独立性</h3><ul><li><p>相互独立定义</p><p>设 A 与 B 为两个事件，如果等式成立则称事件 $A$ 与 $B$ 相互独立：</p><p>$$<br>P(AB)&#x3D;P(A)P(B),<br>$$</p></li><li><p>相互独立性质</p><ol><li>若$P(A),P(B)&gt;0$且 $A$ 与 $B$ 相互独立，则$AB \neq \phi$，即独立必相交，互斥则必不独立</li><li>若事件 A 与 A 独立，则$P(A)&#x3D;0$ 或 $1 $</li><li>在$(A,B),(\bar{A},B),(A,\bar{B}),(\bar{A},\bar{B})$这四对事件中,如果有一对独立,则另外三对也独立</li></ol></li><li><p>多个事件的相互独立定义</p><p>$A_1,A_2,\cdotp\cdotp\cdotp,A_n$为 $n$ 个事件,从中任取的$k$个事件 $(2\leq k\leq n)$均满足$P(A_{i_1}A_{i_2}\cdots A_{i_k})&#x3D;P(A_{i_1})P(A_{i_2})\cdots P(A_{i_k})$则称$A_1,A_2,\cdotp\cdotp\cdotp,A_n$相互独立</p><p>相互独立的定义包括两两独立但两两独立不能推出相互独立</p></li></ul><h3 id="1-5-2-伯努利试验"><a href="#1-5-2-伯努利试验" class="headerlink" title="1.5.2 伯努利试验"></a>1.5.2 伯努利试验</h3><p>在$n$次独立重复试验中，如果事件$A$在每次试验中发生的概率均为$p$ ,那么 $A$ 在这$n$ 次试验中恰好发生$k$ 次的概率为</p><p>$$<br>C_n^kp^k(1-p)^{n-k},\quad k&#x3D;0,1,2,\cdots n<br>$$</p><h1 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h1><ul><li><p><strong>P31：独立性证明</strong></p><ul><li>设 $0 &lt; P(B) &lt; 1$，证明事件 $A$ 和 $B$ 相互独立的充要条件为：</li></ul><p>$$<br>P(A \mid B) + P(\overline{A} \mid \overline{B}) &#x3D; 1<br>$$</p></li><li><p><strong>P34：Polyá 罐子模型</strong></p><ul><li>设罐中有 $a$ 个红球和 $b$ 个黑球，随机取出一个球后放回，并加入 $c$ 个与取出球同色的球，然后进行下一次取球。重复此过程共 $n$ 次，证明第 $n$ 次取球时取出红球的概率为 $\frac{a}{a+b}$。</li><li><strong>要点</strong>：使用归纳法证明概率在每次取球后保持不变。</li></ul></li><li><p>​<img src="/images/image-20241109134443-xyidut8.png" alt="image">​</p></li><li><p><strong>P36：划分事件的概率</strong></p><ul><li>设 $A_1, A_2, \cdots, A_n$ 是样本空间 $\Omega$ 的一个划分，且 $P(A_i) &#x3D; p_i &gt; 0$。求事件 $A_i$ 比 $A_j$ 先发生的概率。</li><li><strong>答案</strong>：$\frac{p_i}{p_i + p_j}$</li></ul></li><li><p><strong>错排问题</strong></p><ul><li><p><strong>全错排数的通项公式</strong></p><ul><li>初值：$D_0&#x3D;1,D_1&#x3D;0,D_2&#x3D;1$</li><li>递推公式：$D_n&#x3D;(n-1)(D_{n-2}+D_{n-1})$</li><li>推导得 $D_n&#x3D;n!\sum_{i&#x3D;0}^n\frac{\left(-1\right)^i}{i!}$</li><li>全部排错的概率为：$\sum_{i&#x3D;0}^n\frac{\left(-1\right)^i}{i!}$</li></ul></li><li><p><strong>部分错排即</strong> <strong>$n$</strong> <strong>个里面</strong> <strong>$k$</strong> <strong>个排对了</strong></p><ul><li>通项公式：$p_n\left(k\right)&#x3D;\frac{n!}{k!}\sum_{i&#x3D;0}^{n-k}\frac{(-1)^i}{i!}$</li><li>部分排错的概率为：$\frac{1}{k!}\sum_{i&#x3D;0}^{n-k}\frac{(-1)^i}{i!}$</li></ul></li></ul></li></ul><p>‍</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;基本知识点&quot;&gt;&lt;a href=&quot;#基本知识点&quot; class=&quot;headerlink&quot; title=&quot;基本知识点&quot;&gt;&lt;/a&gt;基本知识点&lt;/h1&gt;&lt;h2 id=&quot;1-1-随机事件及其运算&quot;&gt;&lt;a href=&quot;#1-1-随机事件及其运算&quot;</summary>
        
      
    
    
    
    <category term="笔记" scheme="https://my1900.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="概率论与数理统计" scheme="https://my1900.github.io/tags/%E6%A6%82%E7%8E%87%E8%AE%BA%E4%B8%8E%E6%95%B0%E7%90%86%E7%BB%9F%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>Weekly1</title>
    <link href="https://my1900.github.io/2024/11/16/weekly-1/"/>
    <id>https://my1900.github.io/2024/11/16/weekly-1/</id>
    <published>2024-11-15T16:00:00.000Z</published>
    <updated>2024-11-17T09:02:01.174Z</updated>
    
    <content type="html"><![CDATA[<p>也许我的第一篇周记是在下周</p><p>敬请期待</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;也许我的第一篇周记是在下周&lt;/p&gt;
&lt;p&gt;敬请期待&lt;/p&gt;
</summary>
        
      
    
    
    
    <category term="周记" scheme="https://my1900.github.io/categories/%E5%91%A8%E8%AE%B0/"/>
    
    
    <category term="周记" scheme="https://my1900.github.io/tags/%E5%91%A8%E8%AE%B0/"/>
    
  </entry>
  
</feed>
